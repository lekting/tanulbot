/**
 * Internationalization (i18n) service
 */

// Supported languages
export type SupportedLanguage = 'en' | 'ru';

// Default language
export const DEFAULT_LANGUAGE: SupportedLanguage = 'ru';

// Translation strings for each language
const translations: Record<SupportedLanguage, Record<string, string>> = {
  en: {
    // Menu items
    'menu.practice': 'üó£ Practice Hungarian',
    'menu.dictation.start': '‚úçÔ∏è Start dictation',
    'menu.dictation.stop': 'üõë Stop dictation',
    'menu.achievements': 'üéØ My achievements',
    'menu.back': '‚¨ÖÔ∏è Back to menu',
    'menu.diary.write': 'üìù Write diary',
    'menu.diary.stop': 'üõë Finish writing',
    'menu.anki': 'üé¥ Create Anki cards',
    'menu.language': 'üåê Change language',
    'menu.vocabulary': 'üìö My vocabulary',

    // Chat management
    'chat.clear': 'üóëÔ∏è Clear chat history',
    'chat.view': 'üìú View chat history',
    'chat.cleared': 'Chat history cleared! Starting a new conversation.',
    'chat.history': 'Your recent chat history:',
    'chat.empty': 'Your chat history is empty.',

    // Vocabulary
    'vocabulary.title': 'üìö My vocabulary ({count} words)',
    'vocabulary.empty': 'Your vocabulary is empty. Words will be added as you practice Hungarian in conversations.',
    'vocabulary.word_format': '{word} - {translation}',
    'vocabulary.word_added': 'üí° New word added to your vocabulary!',
    'vocabulary.words_added': 'üí° {count} new words added to your vocabulary!',

    // Difficulty levels
    'difficulty.easy': 'üü¢ Easy',
    'difficulty.medium': 'üü° Medium',
    'difficulty.hard': 'üî¥ Hard',

    // General messages
    'general.choose_action': 'Choose an action from the menu below ‚¨áÔ∏è',
    'general.choose_difficulty': 'Choose difficulty level:',
    'general.showing_limited': 'Showing {shown} of {total} items',

    // Diary messages
    'diary.activated': 'Diary mode activated! üìù\nWrite your text in Hungarian. If you don\'t know a word, write it in English in parentheses.\nExample: "Ma reggel (woke up) √©s (had breakfast)."\nWhen finished, press "üõë Finish writing"',
    'diary.saved': 'Diary saved! Processing text...',
    'diary.processed': 'üìù Your text has been processed:\n\nCorrected text:\n{text}\n\nImprovement suggestions:\n{suggestions}',
    'diary.continue': '‚úÖ Text saved! Continue writing or press "üõë Finish writing"',
    'diary.mnemonics': 'Mnemonic tips for new words:\n\n{mnemonics}',

    // Dictation messages
    'dictation.start': 'üéß Listen and write! Starting dictation!',
    'dictation.correct': '‚úÖ Excellent, correct!',
    'dictation.incorrect': '‚ùå Incorrect. The correct answer was:\n{text}',
    'dictation.completed': 'üéØ Dictation completed!\nLevel: {level}\nYour result: {points}/{total}',
    'dictation.stopped': '‚õî Dictation stopped.',

    // Achievements
    'achievements.stats': 'üèÜ Your points: {points}\nüåü Level: {level}',

    // Anki messages
    'anki.creating': 'Creating Anki deck... Please wait.',
    'anki.need_diary': 'You need to write in your diary first!',
    'anki.created': 'üé¥ Anki deck created:\nName: {name}\nNumber of words: {count}\n\nLearning recommendations:\n{recommendations}',
    'anki.file_caption': 'üé¥ Your Anki deck with {count} words is ready!',
    'anki.error': '‚ùå {message} Please try again.',

    // Practice
    'practice.start': 'üá≠üá∫ Hello! I\'m ready to chat with you in Hungarian. Just start writing in Hungarian, and I\'ll respond naturally. If you make mistakes, I\'ll gently help you learn. J√≥ besz√©lget√©st! (Good conversation!)',
    
    // Language
    'language.select': 'Please select your preferred language:',
    'language.changed': 'Language changed to English.'
  },
  ru: {
    // Menu items
    'menu.practice': 'üó£ –ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –≤–µ–Ω–≥–µ—Ä—Å–∫–∏–π',
    'menu.dictation.start': '‚úçÔ∏è –ù–∞—á–∞—Ç—å –¥–∏–∫—Ç–∞–Ω—Ç',
    'menu.dictation.stop': 'üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∫—Ç–∞–Ω—Ç',
    'menu.achievements': 'üéØ –ú–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
    'menu.back': '‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
    'menu.diary.write': 'üìù –ù–∞–ø–∏—Å–∞—Ç—å –¥–Ω–µ–≤–Ω–∏–∫',
    'menu.diary.stop': 'üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –∑–∞–ø–∏—Å—å',
    'menu.anki': 'üé¥ –°–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ Anki',
    'menu.language': 'üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫',
    'menu.vocabulary': 'üìö –ú–æ–π —Å–ª–æ–≤–∞—Ä—å',

    // Chat management
    'chat.clear': 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞',
    'chat.view': 'üìú –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞',
    'chat.cleared': '–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –±–µ—Å–µ–¥—É.',
    'chat.history': '–í–∞—à–∞ –Ω–µ–¥–∞–≤–Ω—è—è –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:',
    'chat.empty': '–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø—É—Å—Ç–∞.',

    // Vocabulary
    'vocabulary.title': 'üìö –ú–æ–π —Å–ª–æ–≤–∞—Ä—å ({count} —Å–ª–æ–≤)',
    'vocabulary.empty': '–í–∞—à —Å–ª–æ–≤–∞—Ä—å –ø—É—Å—Ç. –°–ª–æ–≤–∞ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤–µ–Ω–≥–µ—Ä—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞—Ö.',
    'vocabulary.word_format': '{word} - {translation}',
    'vocabulary.word_added': 'üí° –ù–æ–≤–æ–µ —Å–ª–æ–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å!',
    'vocabulary.words_added': 'üí° {count} –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å!',

    // Difficulty levels
    'difficulty.easy': 'üü¢ –õ–µ–≥–∫–∏–π',
    'difficulty.medium': 'üü° –°—Ä–µ–¥–Ω–∏–π',
    'difficulty.hard': 'üî¥ –°–ª–æ–∂–Ω—ã–π',

    // General messages
    'general.choose_action': '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ ‚¨áÔ∏è',
    'general.choose_difficulty': '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:',
    'general.showing_limited': '–ü–æ–∫–∞–∑–∞–Ω–æ {shown} –∏–∑ {total} —ç–ª–µ–º–µ–Ω—Ç–æ–≤',

    // Diary messages
    'diary.activated': '–†–µ–∂–∏–º –¥–Ω–µ–≤–Ω–∏–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! üìù\n–ü–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –≤–µ–Ω–≥–µ—Ä—Å–∫–æ–º. –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ —Å–ª–æ–≤–æ, –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –≤ —Å–∫–æ–±–∫–∞—Ö.\n–ü—Ä–∏–º–µ—Ä: "Ma reggel (–ø—Ä–æ—Å–Ω—É–ª—Å—è) √©s (–ø–æ–∑–∞–≤—Ç—Ä–∞–∫–∞–ª)."\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ, –Ω–∞–∂–º–∏—Ç–µ "üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –∑–∞–ø–∏—Å—å"',
    'diary.saved': '–î–Ω–µ–≤–Ω–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç...',
    'diary.processed': 'üìù –í–∞—à —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω:\n\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n{text}\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é:\n{suggestions}',
    'diary.continue': '‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–∏—Å–∞—Ç—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "üõë –ó–∞–∫–æ–Ω—á–∏—Ç—å –∑–∞–ø–∏—Å—å"',
    'diary.mnemonics': '–ú–Ω–µ–º–æ–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤:\n\n{mnemonics}',

    // Dictation messages
    'dictation.start': 'üéß –°–ª—É—à–∞–π—Ç–µ –∏ –ø–∏—à–∏—Ç–µ! –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∫—Ç–∞–Ω—Ç!',
    'dictation.correct': '‚úÖ –û—Ç–ª–∏—á–Ω–æ, –ø—Ä–∞–≤–∏–ª—å–Ω–æ!',
    'dictation.incorrect': '‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:\n{text}',
    'dictation.completed': 'üéØ –î–∏–∫—Ç–∞–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!\n–£—Ä–æ–≤–µ–Ω—å: {level}\n–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {points}/{total}',
    'dictation.stopped': '‚õî –î–∏–∫—Ç–∞–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.',

    // Achievements
    'achievements.stats': 'üèÜ –í–∞—à–∏ –±–∞–ª–ª—ã: {points}\nüåü –£—Ä–æ–≤–µ–Ω—å: {level}',

    // Anki messages
    'anki.creating': '–°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–¥—É Anki... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.',
    'anki.need_diary': '–°–Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ!',
    'anki.created': 'üé¥ –ö–æ–ª–æ–¥–∞ Anki —Å–æ–∑–¥–∞–Ω–∞:\n–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤: {count}\n\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—É—á–µ–Ω–∏—é:\n{recommendations}',
    'anki.file_caption': 'üé¥ –í–∞—à–∞ –∫–æ–ª–æ–¥–∞ Anki —Å {count} —Å–ª–æ–≤–∞–º–∏ –≥–æ—Ç–æ–≤–∞!',
    'anki.error': '‚ùå {message} –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',

    // Practice
    'practice.start': 'üá≠üá∫ –ü—Ä–∏–≤–µ—Ç! –Ø –≥–æ—Ç–æ–≤ –æ–±—â–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –Ω–∞ –≤–µ–Ω–≥–µ—Ä—Å–∫–æ–º. –ü—Ä–æ—Å—Ç–æ –Ω–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å –Ω–∞ –≤–µ–Ω–≥–µ—Ä—Å–∫–æ–º, –∏ —è –±—É–¥—É –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å. –ï—Å–ª–∏ –≤—ã –¥–æ–ø—É—Å—Ç–∏—Ç–µ –æ—à–∏–±–∫–∏, —è –º—è–≥–∫–æ –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞—É—á–∏—Ç—å—Å—è. J√≥ besz√©lget√©st! (–•–æ—Ä–æ—à–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞!)',
    
    // Language
    'language.select': '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫:',
    'language.changed': '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.'
  }
};

/**
 * Get translation for a key in the specified language
 * @param key - Translation key
 * @param language - Language code
 * @param params - Optional parameters to replace in the translation
 * @returns Translated string
 */
export function t(key: string, language: SupportedLanguage = DEFAULT_LANGUAGE, params?: Record<string, string | number>): string {
  // Get translation or fallback to key if not found
  const translation = translations[language]?.[key] || translations[DEFAULT_LANGUAGE]?.[key] || key;
  
  // Replace parameters if provided
  if (params) {
    return Object.entries(params).reduce((str, [param, value]) => {
      return str.replace(new RegExp(`{${param}}`, 'g'), String(value));
    }, translation);
  }
  
  return translation;
} 